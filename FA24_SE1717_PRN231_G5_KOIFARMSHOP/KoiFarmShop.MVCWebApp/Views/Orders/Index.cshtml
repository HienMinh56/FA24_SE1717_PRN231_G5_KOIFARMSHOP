<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Order List</h3>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add();">
            Add
        </button>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">Order Id</th>
                    <th class="card-title text-center">Total Amount</th>
                    <th class="card-title text-center">Quantity</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Voucher</th>
                    <th class="card-title text-center">Payment</th>
                    <th class="card-title text-center">Created Date</th>
                    <th class="card-title text-center">Created By</th>
                    <th class="card-title text-center">Actions</th>
                </tr>
            </thead>
            <tbody class="tblBanks">
            </tbody>
        </table>
    </div>
</div>

<!-- Modal for Adding Orders -->
<div class="modal" id="orderModal" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="orderModalLabel">Add Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="userId">User ID</label>
                                <input type="text" class="form-control" id="userId" name="userId" required />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="voucherCode">Voucher Code</label>
                                <input type="text" class="form-control" id="voucherCode" name="voucherCode" />
                            </div>
                        </div>
                    </div>
                    <div id="orderItemsSection">
                        <div class="row order-item">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="koiId1">Koi ID</label>
                                    <input type="text" class="form-control koiId" id="koiId1" name="koiId" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="quantity1">Quantity</label>
                                    <input type="number" class="form-control quantity" id="quantity1" name="quantity" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-secondary" onclick="addOrderItem()">Add Item</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>


<!-- Modal for Updating Orders -->
<div class="modal" id="updateOrderModal" tabindex="-1" aria-labelledby="updateOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateOrderModalLabel">Update Order Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="updateOrderId">Order ID</label>
                            <input type="text" class="form-control" id="updateOrderId" name="updateOrderId" readonly />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="updateStatus">Status</label>
                            <select class="form-control" id="updateStatus" name="updateStatus" required>
                                <option value="1">Pending</option>
                                <option value="2">Completed</option>
                                <option value="3">Canceled</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btUpdate" type="button" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Order Details -->
<div class="modal" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Koi ID</th>
                            <th>Price</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="orderDetailBody">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData();

            // Save button click event for adding orders
            $('#btSave').click(function () {
                var orderItems = [];
                $('.order-item').each(function () {
                    var item = {
                        koiId: $(this).find('.koiId').val(),
                        quantity: parseInt($(this).find('.quantity').val())
                    };
                    orderItems.push(item);
                });

                var obj = {
                    userId: $('#userId').val(),
                    orderItems: orderItems,
                    voucherCode: $('#voucherCode').val() || null // Thêm null cho voucher nếu không có
                };

                $.ajax({
                    url: 'https://localhost:7149/api/Orders',
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(obj),
                    success: function (result) {
                        alert(result.message);
                        $('#orderModal').modal('hide');
                        loadData();
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            });



            // Save button click event for updating orders
            $('#btUpdate').click(function () {
                var orderId = $('#updateOrderId').val();
                var status = $('#updateStatus').val();
                updateOrderStatus(orderId, status);
            });
        });
        function add() {
            $('#orderModal').modal('show'); // Hiển thị modal
        }

        // Function to load data
        function loadData() {
            $.ajax({
                url: 'https://localhost:7149/api/Orders',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var html = '';
                    $.each(result.data, function (key, item) {
                        html += '<tr>';
                        html += '<td>' + item.orderId + '</td>';
                        html += '<td>' + item.totalAmount + '</td>';
                        html += '<td>' + item.quantity + '</td>';
                        html += '<td>' + getStatusText(item.status) + '</td>';
                        html += '<td>' + (item.voucherId || 'N/A') + '</td>';
                        html += '<td>' + (item.paymentId || 'N/A') + '</td>';
                        html += '<td>' + item.createdDate + '</td>';
                        html += '<td>' + item.createdBy + '</td>';
                        html += '<td>' +
                            '<button type="button" class="btn btn-warning btn-update" data-id="' + item.orderId + '">Update</button> ' +
                            '<button type="button" class="btn btn-info btn-detail" data-id="' + item.orderId + '">Details</button>' +
                            '</td>';
                        html += '</tr>';
                    });
                    $('.tblBanks').html(html);
                    bindActionButtons();
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }

        // Function to bind actions for Update and Details buttons
        function bindActionButtons() {
            $('.btn-update').click(function () {
                var orderId = $(this).data('id');
                $('#updateOrderId').val(orderId);
                $('#updateOrderModal').modal('show');
            });

            $('.btn-detail').click(function () {
                var orderId = $(this).data('id');
                loadOrderDetails(orderId);
            });
        }
        function addOrderItem() {
            var itemCount = $('.order-item').length; // Đếm số lượng mục hiện tại
            var newItemId = itemCount + 1; // Tạo ID mới cho mục

            // Tạo một dòng mới cho mục đơn hàng
            var newItemHtml = `
                <div class="row order-item">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="koiId${newItemId}">Koi ID</label>
                            <input type="text" class="form-control koiId" id="koiId${newItemId}" name="koiId" required />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="quantity${newItemId}">Quantity</label>
                            <input type="number" class="form-control quantity" id="quantity${newItemId}" name="quantity" required />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <button type="button" class="btn btn-danger" onclick="removeOrderItem(this)">Remove</button>
                    </div>
                </div>`;

            // Thêm dòng mới vào phần danh sách mục đơn hàng
            $('#orderItemsSection').append(newItemHtml);
        }

        // Hàm để xóa mục đơn hàng
        function removeOrderItem(button) {
            $(button).closest('.order-item').remove(); // Xóa dòng mục đơn hàng
        }

        // Function to get order details
        function getOrderDetail(orderId) {
            $.ajax({
                url: 'https://localhost:7149/api/OrderDetails/' + orderId,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $('#orderDetailBody').empty(); // Clear previous data
                    if (result.data && result.data.length > 0) {
                        // Loop through each item in the data array
                        result.data.forEach(function (item) {
                            $('#orderDetailBody').append('<tr><td>' + item.koiId + '</td><td>' + item.price + '</td><td>' + item.quantity + '</td></tr>');
                        });
                    } else {
                        $('#orderDetailBody').append('<tr><td colspan="3">No items found</td></tr>');
                    }
                    $('#orderDetailModal').modal('show'); // Show the modal
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }

        // Event listener for order detail button
        $(document).on('click', '.btn-detail', function () {
            var orderId = $(this).data('id');
            getOrderDetail(orderId);
        });

        // Function to update order status
        function updateOrderStatus(orderId, status) {
            $.ajax({
                url: 'https://localhost:7149/api/Orders/' + orderId + '?status=' + status,
                type: "PUT", // Sử dụng phương thức GET
                success: function (result) {
                    alert(result.message);
                    $('#updateOrderModal').modal('hide');
                    loadData();
                },
                error: function (xhr, error) {
                    console.log(xhr.responseText); // Hiển thị thông báo lỗi từ API
                    alert(xhr.statusText);
                }
            });
        }


        // Function to get status text based on status code
        function getStatusText(statusCode) {
            switch (statusCode) {
                case 1: return 'Pending';
                case 2: return 'Completed';
                case 3: return 'Canceled';
                default: return 'Unknown';
            }
        }
    </script>
}
