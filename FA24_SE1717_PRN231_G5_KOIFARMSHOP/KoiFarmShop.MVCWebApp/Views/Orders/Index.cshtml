<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Order List</h3>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add();">
            Add
        </button>
    </div>
</div>
<form id="OrderFilterForm" class="d-flex mb-4 align-items-end" style="gap: 10px;">
    <div class="flex-fill">
        <input type="text" class="form-control" id="OrderId" name="OrderId" placeholder="Enter order id" />
    </div>
    <div class="flex-fill">
        <input type="text" class="form-control" id="ShippingAddress" name="ShippingAddress" placeholder="Enter shipping address" />
    </div>
    <div class="flex-fill">
        <input type="text" class="form-control" id="Status" name="Status" placeholder="Enter status" />
    </div>
    <button type="button" id="searchBtn" class="btn btn-primary">Search</button>
</form>
<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">Order Id</th>
                    <th class="card-title text-center">User Id</th>
                    <th class="card-title text-center">Total Amount</th>
                    <th class="card-title text-center">Quantity</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Voucher</th>
                    <th class="card-title text-center">Shipping Address</th>
                    <th class="card-title text-center">Payment Method</th>
                    <th class="card-title text-center">Delivery Date</th>
                    <th class="card-title text-center">Receive Date</th>
                    <th class="card-title text-center">Note</th>
                    <th class="card-title text-center">Total Weight</th>
                    <th class="card-title text-center">Actions</th>
                </tr>
            </thead>
            <tbody class="tblBanks">
            </tbody>
        </table>
    </div>
</div>

<!-- Modal for Adding Orders -->
<div class="modal" id="orderModal" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="orderModalLabel">Add Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="userId">User ID</label>
                                <select class="form-control" id="userId" name="userId" required>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="voucherCode">Voucher Code</label>
                                <input type="text" class="form-control" id="voucherCode" name="voucherCode" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="status">Status</label>
                                <input type="text" class="form-control" id="status" name="status" required />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="shippingAddress">Shipping Address</label>
                                <input type="text" class="form-control" id="shippingAddress" name="shippingAddress" required />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="paymentMethod">Payment Method</label>
                                <select class="form-select" id="paymentMethod" name="paymentMethod" required>
                                    <option value="Online">Online</option>
                                    <option value="Offline">Offline</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="deliveryDate">Delivery Date</label>
                                <input type="date" class="form-control" id="deliveryDate" name="deliveryDate" required />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="note">Note</label>
                                <input type="text" class="form-control" id="note" name="note" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="totalWeight">Total Weight</label>
                                <input type="number" class="form-control" id="totalWeight" name="totalWeight" required />
                            </div>
                        </div>
                    </div>

                    <!-- Order Details Section -->
                    <h5>Order Details</h5>
                    <div id="orderDetailsContainer">
                        <div class="row order-detail">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="koiId">Koi ID</label>

                                    <select class="form-control" name="koiId" required>
                                    </select>

                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label for="detailQuantity">Quantity</label>
                                    <input type="number" class="form-control" name="quantity" required />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-danger remove-detail">Remove</button>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-secondary" id="addDetail">Add Another Detail</button>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>



<!-- Modal for Updating Orders -->
<div class="modal" id="updateOrderModal" tabindex="-1" aria-labelledby="updateOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateOrderModalLabel">Update Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="updateOrderId">Order ID</label>
                    <input type="text" class="form-control" id="updateOrderId" name="orderId" readonly />
                </div>
                <div class="form-group">
                    <label for="updateStatus">Status</label>
                    <select class="form-select" id="updateStatus" name="updateStatus">
                        <option value="1">Pending</option>
                        <option value="2">Completed</option>
                        <option value="3">Canceled</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="updateUserId">User</label>
                    <select class="form-control" id="updateUserId" name="updateUserId" required>
                    </select>
                </div>
                <div class="form-group">
                    <label for="updateVoucherId">Voucher Code</label>
                    <input type="text" class="form-control" id="updateVoucherId" name="updateVoucherId" />
                </div>
            </div>
            <div class="form-group">
                <label for="updateShippingAddress">Shipping Address</label>
                <input type="text" class="form-control" id="updateShippingAddress" name="updateShippingAddress" required />
            </div>
            <div class="form-group">
                <label for="updatePaymentMethod">Payment Method</label>
                <select class="form-select" id="updatePaymentMethod" name="updatePaymentMethod" required>
                    <option value="Online">Online</option>
                    <option value="Offline">Offline</option>
                </select>
            </div>
            <div class="form-group">
                <label for="updateDeliveryDate">Delivery Date</label>
                <input type="datetime-local" class="form-control" id="updateDeliveryDate" name="updateDeliveryDate" required />
            </div>
            <div class="form-group">
                <label for="updateReceiveDate">Receive Date</label>
                <input type="datetime-local" class="form-control" id="updateReceiveDate" name="updateReceiveDate" required />
            </div>
            
            <div class="form-group">
                <label for="updateNote">Note</label>
                <input type="text" class="form-control" id="updateNote" name="updateNote" required />
            </div>
            <div class="form-group">
                <label for="updateTotalWeight">Total Weight</label>
                <input type="text" class="form-control" id="updateTotalWeight" name="updateTotalWeight" required />
            </div>

            <div class="modal-footer">
                <button id="btUpdate" type="button" class="btn btn-primary">Update</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal for Order Details -->
<div class="modal" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="max-width: 70%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6>Order Information</h6>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Order Id</th>
                            <th>Total Amount</th>
                            <th>Quantity</th>
                            <th>Status</th>
                            <th>User Id</th>
                            <th>Voucher Id</th>
                            <th>Shipping Address</th>
                            <th>Payment Method</th>
                            <th>Delivery Date</th>
                            <th>Receive Date</th>
                            <th>Note</th>
                            <th>Total Weight</th>
                        </tr>
                    </thead>
                    <tbody id="orderDetailBody">
                    </tbody>
                </table>

                <h6>Order Details</h6> <!-- New Section -->
                <table class="table">
                    <thead>
                        <tr>
                            <th>Koi Name</th>
                            <th>Koi Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="koiDetailBody">
                        <!-- Separate body for koi details -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData();
            loadUsers();
            // loadVouchers();
            loadKoi();
            $('#OrderFilterForm input').on('input change', function () {
                $('#searchBtn').addClass('active');
            });

            $('#searchBtn').on('click', function () {
                filterOrders();
            });
            $('#btSave').click(function () {
                var orderDetails = [];

                // Gather order details from the form
                $('#orderDetailsContainer .order-detail').each(function () {
                    var detail = {
                        koiId: $(this).find('select[name="koiId"]').val(),
                        quantity: parseInt($(this).find('input[name="quantity"]').val())
                    };
                    orderDetails.push(detail);
                });

                var order = {
                    userId: $('#userId').val(),
                    status: parseInt($('#status').val()), // Ensure this is an integer
                    voucherCode: $('#voucherCode').val() || null, // Ensure this is captured
                    shippingAddress: $('#shippingAddress').val(),
                    paymentMethod: $('#paymentMethod').val(),
                    deliveryDate: new Date($('#deliveryDate').val()).toISOString(), // Convert to ISO string
                    receiveDate: new Date().toISOString(), // Set to current time or another value as needed
                    note: $('#note').val() || null,
                    totalWeight: parseFloat($('#totalWeight').val()),
                    orderDetails: orderDetails
                };

                // Log the order object before sending
                console.log("Order Object:", JSON.stringify(order));

                $.ajax({
                    url: 'https://localhost:7149/api/Orders',
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(order), // Sending the order object directly
                    success: function (result) {
                        alert(result.message);
                        $('#orderModal').modal('hide');
                        loadData(); // Call your function to refresh the data on the page
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            });

            // Add functionality to dynamically add order details
            $('#addDetail').click(function () {

                const detailHtml = `
            <div class="row order-detail">
                <div class="col-md-5">
                    <div class="form-group">
                        <label for="koiId">Koi ID</label>
                        <select class="form-control" name="koiId" required>
                            ${koiDropdownHtml} <!-- Use stored dropdown HTML here -->
                        </select>

                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group">
                        <label for="detailQuantity">Quantity</label>
                        <input type="number" class="form-control" name="quantity" required />
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-danger remove-detail">Remove</button>
                </div>
            </div>
            `;
                $('#orderDetailsContainer').append(detailHtml);
            });

            // Event to remove order detail row
            $(document).on('click', '.remove-detail', function () {
                $(this).closest('.order-detail').remove();
            });





            $('#btUpdate').click(function () {
                var orderId = $('#updateOrderId').val();
                var status = $('#updateStatus').val();
                var userId = $('#updateUserId').val();
                var voucherCode = $('#updateVoucherId').val() || null;
                var shippingAddress = $('#updateShippingAddress').val();
                var paymentMethod = $('#updatePaymentMethod').val();
                var deliveryDate = $('#updateDeliveryDate').val();
                var receiveDate = $('#updateReceiveDate').val();
                var note = $('#updateNote').val();
                var totalWeight = $('#updateTotalWeight').val();

                var updateObj = {
                    orderId: orderId,
                    status: status,
                    userId: userId,
                    voucherCode: voucherCode,
                    shippingAddress: shippingAddress,
                    paymentMethod: paymentMethod,
                    deliveryDate: deliveryDate,
                    receiveDate: receiveDate,
                    note: note,
                    totalWeight: parseFloat(totalWeight)
                };

                $.ajax({
                    url: 'https://localhost:7149/api/Orders',
                    type: "PUT",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(updateObj),
                    success: function (result) {
                        alert(result.message);
                        $('#updateOrderModal').modal('hide');
                        loadData();
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            });


        });
        function add() {
            $('#orderModal').modal('show'); 
        }
        function filterOrders() {
            const orderId = $('#OrderId').val().toLowerCase();
            const shippingAddress = $('#ShippingAddress').val().toLowerCase();
            const status = $('#Status').val().toLowerCase(); 

            console.log("Filtering Orders with: ", {
                orderId,
                shippingAddress,
                status
            });

            let filteredOrders = allOrders.filter(order => {
                return (
                    (orderId === '' || order.orderId.toString().toLowerCase().includes(orderId)) &&
                    (shippingAddress === '' || order.shippingAddress.toLowerCase().toString().includes(shippingAddress)) &&
                    (status === '' || getStatusText(order.status).toLowerCase().includes(status)) // So sánh tên trạng thái
                );
            });

            if (filteredOrders.length > 0) {
                displayOrders(filteredOrders);
            } else {
                $('.tblBanks').html('<tr><td colspan="9">No orders found.</td></tr>');
            }
        }

        function loadData() {
            $.ajax({
                url: 'https://localhost:7149/api/Orders',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    allOrders = result.data || []; // Store all orders for filtering later
                    console.log("All Orders Loaded: ", allOrders);
                    displayOrders(allOrders); // Initially display all orders
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }
        function displayOrders(orders) {
            let html = '';
            $.each(orders, function (key, item) {
                html += '<tr>';
                html += '<td>' + item.orderId + '</td>';
                html += '<td>' + item.userId + '</td>';
                html += '<td>' + item.totalAmount + '</td>';
                html += '<td>' + item.quantity + '</td>';
                html += '<td>' + getStatusText(item.status) + '</td>';
                html += '<td>' + (item.voucherId || 'N/A') + '</td>';
                html += '<td>' + item.shippingAddress + '</td>';
                html += '<td>' + item.paymentMethod + '</td>';
                html += '<td>' + item.deliveryDate + '</td>';
                html += '<td>' + item.receiveDate + '</td>';
                html += '<td>' + item.note + '</td>';
                html += '<td>' + item.totalWeight + '</td>';
                html += '<td>' +
                    '<button type="button" class="btn btn-warning btn-update" data-id="' + item.orderId + '">Update</button> ' +
                    '<button type="button" class="btn btn-info btn-detail" data-id="' + item.orderId + '">Details</button>' +
                    '<button type="button" class="btn btn-danger btn-delete" data-id="' + item.orderId + '">Delete</button>' +
                    '</td>';
                html += '</tr>';
            });
            $('.tblBanks').html(html);
            bindActionButtons();
        }
        function loadUsers() {
            $.ajax({
                url: 'https://localhost:7149/api/Users',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var userHtml = '';
                    $.each(result.data, function (key, item) {
                        userHtml += `<option value="${item.userId}">${item.fullName}</option>`;
                    });
                    $('#updateUserId').append(userHtml);
                    $('#userId').append(userHtml);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }

        function loadVouchers() {
            $.ajax({
                url: 'https://localhost:7149/api/Vouchers',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var voucherHtml = '';
                    $.each(result.data, function (key, item) {
                        voucherHtml += `<option value="${item.voucherId}">${item.voucherCode}</option>`;
                    });
                    $('#updateVoucherId').append(voucherHtml);
                    $('#voucherCode').append(voucherHtml);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }

        function loadKoi() {
            $.ajax({
                url: 'https://localhost:7149/api/KoiFish',
                type: 'GET',
                success: function (response) {
                    if (response.status === 1) {
                        koiDropdownHtml = response.data.map(koi =>
                            `<option value="${koi.koiId}">${koi.koiName}</option>`
                        ).join('');

                        // Populate initial koi dropdown
                        $('#orderDetailsContainer select[name="koiId"]').html(koiDropdownHtml);
                    } else {
                        console.error("Failed to load koi data:", response.message);
                    }
                },
                error: function (xhr, error) {
                    console.error("Error fetching koi data:", xhr.statusText);

                }
            });
        }
        function bindActionButtons() {
            $('.btn-update').click(function () {
                var orderId = $(this).data('id');
                $.ajax({
                    url: 'https://localhost:7149/api/Orders/' + orderId,
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $('#updateOrderId').val(result.data.orderId);
                        $('#updateTotalAmount').val(result.data.totalAmount);
                        $('#updateQuantity').val(result.data.quantity);
                        $('#updateStatus').val(result.data.status); 
                        $('#updateVoucherId').val(result.data.voucherId || ''); 
                        $('#updateUserId').val(result.data.userId);
                        $('#updateShippingAddress').val(result.data.shippingAddress);
                        $('#updatePaymentMethod').val(result.data.paymentMethod);
                        $('#updateDeliveryDate').val(result.data.deliveryDate);
                        $('#updateReceiveDate').val(result.data.receiveDate);
                        $('#updateNote').val(result.data.note);
                        $('#updateTotalWeight').val(result.data.totalWeight);
                        $('#updateOrderModal').modal('show');
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            });


            $('.btn-detail').click(function () {
                var orderId = $(this).data('id');
                loadOrderDetails(orderId);
            });
            $('.btn-delete').click(function () {
                var orderId = $(this).data('id');
                deleteOrder(orderId); 
            });
        }
        function deleteOrder(orderId) {
            if (confirm("Are you sure you want to delete this order?")) {
                $.ajax({
                    url: 'https://localhost:7149/api/Orders/' + orderId,
                    type: "DELETE",
                    success: function (result) {
                        alert(result.message);
                        loadData(); 
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            }
        }



        
        function loadOrderDetails(orderId) {
            $.ajax({
                url: 'https://localhost:7149/api/Orders/' + orderId,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result && result.data) {
                        // Hiển thị dữ liệu chi tiết đơn hàng trong modal
                        let order = result.data;

                        let orderDetailsHtml = `
                            <tr>
                                <td>${order.orderId}</td>
                                <td>${order.totalAmount}</td>
                                <td>${order.quantity}</td>
                                <td>${getStatusText(order.status)}</td>
                                <td>${order.userId}</td>
                                <td>${order.voucherId || 'N/A'}</td>
                                <td>${order.shippingAddress}</td>
                                <td>${order.paymentMethod}</td>
                                <td>${order.deliveryDate}</td>
                                <td>${order.receiveDate}</td>
                                <td>${order.note}</td>
                                <td>${order.totalWeight}</td>
                            </tr>`;
                        loadOrderDetailsByOrderId(orderId);
                        $('#orderDetailBody').html(orderDetailsHtml); // Cập nhật dữ liệu vào bảng
                        $('#orderDetailModal').modal('show'); // Hiển thị modal chi tiết
                    } else {
                        alert('Not found order.');
                    }
                },
                error: function (xhr, error) {
                    alert('Not found order: ' + xhr.statusText);
                }
            });
        }

        function loadOrderDetailsByOrderId(orderId) {
            $.ajax({
                url: 'https://localhost:7149/api/OrderDetails/' + orderId,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result && result.data && result.data.length > 0) {
                        let koiDetailsHtml = '';
                        $.each(result.data, function (key, item) {
                            koiDetailsHtml += `
                                <tr>
                                    <td>${item.koi.koiName}</td>
                                    <td>${item.quantity}</td>
                                </tr>`;
                        });

                        // Append the koi details to the separate body
                        $('#koiDetailBody').html(koiDetailsHtml);
                        $('#orderDetailModal').modal('show'); // Show modal after both data loads
                    } else {
                        alert('Not found order.');
                    }
                },
                error: function (xhr, error) {
                    alert('Not found order: ' + xhr.statusText);
                }
            });
        }


        // Function to get status text based on status code
        function getStatusText(statusCode) {
            switch (statusCode) {
                case 1: return 'Pending';
                case 2: return 'Completed';
                case 3: return 'Canceled';
                case 4: return 'Deleted';
                default: return 'Unknown';
            }
        }
    </script>
}
