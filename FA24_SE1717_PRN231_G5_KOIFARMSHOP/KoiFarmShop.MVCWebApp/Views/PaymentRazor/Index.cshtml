@model IEnumerable<KoiFarmShop.Data.Models.Payment>
@{
    ViewData["Title"] = "Index";
}

<h1>Payments</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form method="get" asp-action="Index" class="d-flex mb-4 align-items-end" style="gap: 10px;">
    <div class="flex-fill">
        <input type="text" class="form-control" id="PaymentId" name="PaymentId" placeholder=" PyamentId" value="@ViewBag.PaymentId" />
    </div>
    <div class="flex-fill">
        <input type="text" class="form-control" id="UserId" name="UserId" placeholder=" User Id" value="@ViewBag.UserId" />
    </div>
    <div class="flex-fill">
        <input type="text" class="form-control" id="Type" name="Type" placeholder=" Type" value="@ViewBag.Type" />
    </div>

    <div class="flex-fill">
        <input type="text" class="form-control" id="PaymentMethod" name="PaymentMethod" placeholder=" PaymentMethod" value="@ViewBag.PaymentMethod" />
    </div>

    <div class="flex-fill">
        <input type="text" class="form-control" id="Refundable" name="Refundable" placeholder=" Refundable" value="@ViewBag.Refundable" />
    </div>

    <div class="flex-fill">
        <input type="text" class="form-control" id="Currency" name="Currency" placeholder=" Currency" value="@ViewBag.Currency" />
    </div>


    <button type="submit" class="btn btn-primary">Search</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PaymentId)</th>
            <th>@Html.DisplayNameFor(model => model.UserId)</th>
            <th>@Html.DisplayNameFor(model => model.Amount)</th>
            <th>@Html.DisplayNameFor(model => model.Type)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.PaymentMethod)</th>
            <th>@Html.DisplayNameFor(model => model.Refundable)</th>
            <th>@Html.DisplayNameFor(model => model.Currency)</th>
            <th>@Html.DisplayNameFor(model => model.OrderId)</th>
            <th>@Html.DisplayNameFor(model => model.ConsignmentId)</th>
            <th>@Html.DisplayNameFor(model => model.Note)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.PaymentId)</td>
                <td>@Html.DisplayFor(modelItem => item.UserId)</td>
                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                <td>
                    @(item.Type == 1 ? "Order" : "Consignments")
                </td>
                <td>
                    @(item.Status == 1 ? "Success" : item.Status == 2 ? "Pending" : "Cancel")
                </td>
                <td>@Html.DisplayFor(modelItem => item.PaymentMethod)</td>
                <td>@(item.Refundable == 1 ? "Yes" : "No")</td>
                <td>@Html.DisplayFor(modelItem => item.Currency)</td>
                <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                <td>@Html.DisplayFor(modelItem => item.ConsignmentId)</td>
                <td>@Html.DisplayFor(modelItem => item.Note)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.PaymentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PaymentId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PaymentId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (ViewBag.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-OrderId="@ViewBag.OrderId"
                   asp-route-UserId="@ViewBag.UserId"
                   asp-route-Status="@ViewBag.Type">Previous</a>
            </li>
        }
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i"
                   asp-route-OrderId="@ViewBag.OrderId"
                   asp-route-UserId="@ViewBag.UserId"
                   asp-route-Status="@ViewBag.Type">@i</a>
            </li>
        }
        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-OrderId="@ViewBag.OrderId"
                   asp-route-UserId="@ViewBag.UserId"
                   asp-route-Status="@ViewBag.Type">Next</a>
            </li>
        }
    </ul>
</nav>